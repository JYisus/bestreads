name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Check secrets
        run: docker run --rm -v "$(pwd):/proj" dxa4481/trufflehog --regex --entropy=False --max_depth=1 file:///proj

      - name: Scanning dependencies
        run: npm audit
  # # Initializes the CodeQL tools for scanning.
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v1
  #       with:
  #         languages: ${{ matrix.language }}
  #         # If you wish to specify custom queries, you can do so here or in a config file.
  #         # By default, queries listed here will override any specified in a config file.
  #         # Prefix the list here with "+" to use these queries and those in the config file.
  #         # queries: ./path/to/local/query, your-org/your-repo/queries@main

  #     # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
  #     # If this step fails, then you should remove it and run the build manually (see below)
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v1

  #     # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
  #     # üìö https://git.io/JvXDl

  #     # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
  #     #    and modify them (or add more) to build your code if your project
  #     #    uses a compiled language

  #     #- run: |
  #     #   make bootstrap
  #     #   make release

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v1

      - name: SAST njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: './src'

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Installing dependencies
        run: npm install

      - name: Executing tests
        run: npm test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432 # ${{ job.services.postgres.ports[5432] }}
      
      # - name: Set up Docker Build
      #   uses: docker/setup-buildx-action@v1
      #   with:
      #     install: true

      - name: Build Docker image
        run: |
          docker build . -t localbuild/bestreads-backend:latest

      - name: Container Scanning
        uses: hands-lab/dockle-action@v1
        with:
          image: 'localbuild/bestreads-backend:latest'
          exit-code: '1'
          exit-level: FATAL

      # - name: DAST OWASP Scanning
      #   uses: zaproxy/action-baseline@v0.4.0
      #   with:
      #     target: http://bestreads_backend:3000
